<?php return array (
  'unique_key' => 'category',
  'preserve_keys' => false,
  'update_object' => true,
  'related_objects' => 
  array (
    'Snippets' => 
    array (
      'd0b9d23064890fa11270eeee8ac231bc' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":1,"source":0,"property_preprocess":0,"name":"SimpleSearch","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * SimpleSearch\\n *\\n * Copyright 2010-11 by Shaun McCormick <shaun+sisea@modx.com>\\n *\\n * This file is part of SimpleSearch, a simple search component for MODx\\n * Revolution. It is loosely based off of AjaxSearch for MODx Evolution by\\n * coroico\\/kylej, minus the ajax.\\n *\\n * SimpleSearch is free software; you can redistribute it and\\/or modify it under\\n * the terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * SimpleSearch is distributed in the hope that it will be useful, but WITHOUT\\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\\n * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more\\n * details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * SimpleSearch; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package simplesearch\\n *\\/\\n\\/**\\n * SimpleSearch snippet\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n * @package simplesearch\\n *\\/\\nrequire_once $modx->getOption(\'sisea.core_path\',null,$modx->getOption(\'core_path\').\'components\\/simplesearch\\/\').\'model\\/simplesearch\\/simplesearch.class.php\';\\n$search = new SimpleSearch($modx,$scriptProperties);\\n\\n\\/* find search index and toplaceholder setting *\\/\\n$searchIndex = $modx->getOption(\'searchIndex\',$scriptProperties,\'search\');\\n$toPlaceholder = $modx->getOption(\'toPlaceholder\',$scriptProperties,false);\\n$noResultsTpl = $modx->getOption(\'noResultsTpl\',$scriptProperties,\'SearchNoResults\');\\n\\n\\/* get search string *\\/\\nif (empty($_REQUEST[$searchIndex])) {\\n    $output = $search->getChunk($noResultsTpl,array(\\n        \'query\' => \'\',\\n    ));\\n    return $search->output($output,$toPlaceholder);\\n}\\n$searchString = $search->parseSearchString($_REQUEST[$searchIndex]);\\nif (!$searchString) {\\n    $output = $search->getChunk($noResultsTpl,array(\\n        \'query\' => $searchString,\\n    ));\\n    return $search->output($output,$toPlaceholder);\\n}\\n\\n\\/* setup default properties *\\/\\n$tpl = $modx->getOption(\'tpl\',$scriptProperties,\'SearchResult\');\\n$containerTpl = $modx->getOption(\'containerTpl\',$scriptProperties,\'SearchResults\');\\n$showExtract = $modx->getOption(\'showExtract\',$scriptProperties,true);\\n$extractLength = $modx->getOption(\'extractLength\',$scriptProperties,200);\\n$extractEllipsis = $modx->getOption(\'extractEllipsis\',$scriptProperties,\'...\');\\n$highlightResults = $modx->getOption(\'highlightResults\',$scriptProperties,true);\\n$highlightClass = $modx->getOption(\'highlightClass\',$scriptProperties,\'sisea-highlight\');\\n$highlightTag = $modx->getOption(\'highlightTag\',$scriptProperties,\'span\');\\n$perPage = $modx->getOption(\'perPage\',$scriptProperties,10);\\n$pagingSeparator = $modx->getOption(\'pagingSeparator\',$scriptProperties,\' | \');\\n$placeholderPrefix = $modx->getOption(\'placeholderPrefix\',$scriptProperties,\'sisea.\');\\n$includeTVs = $modx->getOption(\'includeTVs\',$scriptProperties,\'\');\\n$processTVs = $modx->getOption(\'processTVs\',$scriptProperties,\'\');\\n$offsetIndex = $modx->getOption(\'offsetIndex\',$scriptProperties,\'sisea_offset\');\\n$idx = isset($_REQUEST[$offsetIndex]) ? intval($_REQUEST[$offsetIndex]) + 1 : 1;\\n$postHooks = $modx->getOption(\'postHooks\',$scriptProperties,\'\');\\n$activeFacet = $modx->getOption(\'facet\',$_REQUEST,$modx->getOption(\'activeFacet\',$scriptProperties,\'default\'));\\n$activeFacet = $modx->sanitizeString($activeFacet);\\n$facetLimit = $modx->getOption(\'facetLimit\',$scriptProperties,5);\\n\\n\\/* get results *\\/\\n$response = $search->getSearchResults($searchString,$scriptProperties);\\n$placeholders = array(\'query\' => $searchString);\\n$resultsTpl = array(\'default\' => array(\'results\' => array(),\'total\' => $response[\'total\']));\\nif (!empty($response[\'results\'])) {\\n    \\/* iterate through search results *\\/\\n    foreach ($response[\'results\'] as $resourceArray) {\\n        $resourceArray[\'idx\'] = $idx;\\n        if (empty($resourceArray[\'link\'])) {\\n            $ctx = !empty($resourceArray[\'context_key\']) ? $resourceArray[\'context_key\'] : $modx->context->get(\'key\');\\n            $resourceArray[\'link\'] = $modx->makeUrl($resourceArray[\'id\'],$ctx);\\n        }\\n        if ($showExtract) {\\n            $extract = array_pop($search->searchArray);\\n            $extract = $search->createExtract($resourceArray[\'content\'],$extractLength,$extract,$extractEllipsis);\\n            \\/* cleanup extract *\\/\\n            $extract = strip_tags(preg_replace(\\"#\\\\<!--(.*?)--\\\\>#si\\",\'\',$extract));\\n            $extract = preg_replace(\\"#\\\\[\\\\[(.*?)\\\\]\\\\]#si\\",\'\',$extract);\\n            $extract = str_replace(array(\'[[\',\']]\'),\'\',$extract);\\n            $resourceArray[\'extract\'] = !empty($highlightResults) ? $search->addHighlighting($extract,$highlightClass,$highlightTag) : $extract;\\n        }\\n        $resultsTpl[\'default\'][\'results\'][] = $search->getChunk($tpl,$resourceArray);\\n        $idx++;\\n    }\\n}\\n\\n\\/* load postHooks to get faceted results *\\/\\nif (!empty($postHooks)) {\\n    $limit = !empty($facetLimit) ? $facetLimit : $perPage;\\n    $search->loadHooks(\'post\');\\n    $search->postHooks->loadMultiple($postHooks,$response[\'results\'],array(\\n        \'hooks\' => $postHooks,\\n        \'search\' => $searchString,\\n        \'offset\' => !empty($_GET[$offsetIndex]) ? intval($_GET[$offsetIndex]) : 0,\\n        \'limit\' => $limit,\\n        \'perPage\' => $limit,\\n    ));\\n    if (!empty($search->postHooks->facets)) {\\n        foreach ($search->postHooks->facets as $facetKey => $facetResults) {\\n            if (empty($resultsTpl[$facetKey])) {\\n                $resultsTpl[$facetKey] = array();\\n                $resultsTpl[$facetKey][\'total\'] = $facetResults[\'total\'];\\n                $resultsTpl[$facetKey][\'results\'] = array();\\n            } else {\\n                $resultsTpl[$facetKey][\'total\'] = $resultsTpl[$facetKey][\'total\'] = $facetResults[\'total\'];\\n            }\\n\\n            $idx = !empty($resultsTpl[$facetKey]) ? count($resultsTpl[$facetKey][\'results\'])+1 : 1;\\n            foreach ($facetResults[\'results\'] as $r) {\\n                $r[\'idx\'] = $idx;\\n                $fTpl = !empty($scriptProperties[\'tpl\'.$facetKey]) ? $scriptProperties[\'tpl\'.$facetKey] : $tpl;\\n                $resultsTpl[$facetKey][\'results\'][] = $search->getChunk($fTpl,$r);\\n                $idx++;\\n            }\\n        }\\n    }\\n}\\n\\n\\/* set faceted results to placeholders for easy result positioning *\\/\\n$output = array();\\nforeach ($resultsTpl as $facetKey => $facetResults) {\\n    $resultSet = implode(\\"\\\\n\\",$facetResults[\'results\']);\\n    $placeholders[$facetKey.\'.results\'] = $resultSet;\\n    $placeholders[$facetKey.\'.total\'] = !empty($facetResults[\'total\']) ? $facetResults[\'total\'] : 0;\\n    $placeholders[$facetKey.\'.key\'] = $facetKey;\\n}\\n$placeholders[\'results\'] = $placeholders[$activeFacet.\'.results\']; \\/* set active facet results *\\/\\n$placeholders[\'total\'] = !empty($resultsTpl[$activeFacet][\'total\']) ? $resultsTpl[$activeFacet][\'total\'] : 0;\\n$placeholders[\'page\'] = isset($_REQUEST[$offsetIndex]) ? ceil(intval($_REQUEST[$offsetIndex]) \\/ $perPage) + 1 : 1;\\n$placeholders[\'pageCount\'] = !empty($resultsTpl[$activeFacet][\'total\']) ? ceil($resultsTpl[$activeFacet][\'total\'] \\/ $perPage) : 1;\\n\\nif (!empty($response[\'results\'])) {\\n    \\/* add results found message *\\/\\n    $placeholders[\'resultInfo\'] = $modx->lexicon(\'sisea.results_found\',array(\\n        \'count\' => $placeholders[\'total\'],\\n        \'text\' => !empty($highlightResults) ? $search->addHighlighting($searchString,$highlightClass,$highlightTag) : $searchString,\\n    ));\\n    \\/* if perPage set to >0, add paging *\\/\\n    if ($perPage > 0) {\\n        $placeholders[\'paging\'] = $search->getPagination($searchString,$perPage,$pagingSeparator,$placeholders[\'total\']);\\n    }\\n}\\n$placeholders[\'query\'] = $searchString;\\n$placeholders[\'facet\'] = $activeFacet;\\n\\n\\/* output *\\/\\n$modx->setPlaceholder($placeholderPrefix.\'query\',$searchString);\\n$modx->setPlaceholder($placeholderPrefix.\'count\',$response[\'total\']);\\n$modx->setPlaceholders($placeholders,$placeholderPrefix);\\nif (empty($response[\'results\'])) {\\n    $output = $search->getChunk($noResultsTpl,array(\\n        \'query\' => $searchString,\\n    ));\\n} else {\\n    $output = $search->getChunk($containerTpl,$placeholders);\\n}\\nreturn $search->output($output,$toPlaceholder);","locked":0,"properties":"a:43:{s:3:\\"tpl\\";a:7:{s:4:\\"name\\";s:3:\\"tpl\\";s:4:\\"desc\\";s:14:\\"sisea.tpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:12:\\"SearchResult\\";s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"containerTpl\\";a:7:{s:4:\\"name\\";s:12:\\"containerTpl\\";s:4:\\"desc\\";s:23:\\"sisea.containertpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:13:\\"SearchResults\\";s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"useAllWords\\";a:7:{s:4:\\"name\\";s:11:\\"useAllWords\\";s:4:\\"desc\\";s:22:\\"sisea.useallwords_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"maxWords\\";a:7:{s:4:\\"name\\";s:8:\\"maxWords\\";s:4:\\"desc\\";s:19:\\"sisea.maxwords_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:7;s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"minChars\\";a:7:{s:4:\\"name\\";s:8:\\"minChars\\";s:4:\\"desc\\";s:19:\\"sisea.minchars_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:3;s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"searchStyle\\";a:7:{s:4:\\"name\\";s:11:\\"searchStyle\\";s:4:\\"desc\\";s:22:\\"sisea.searchstyle_desc\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:2:{i:0;a:2:{s:4:\\"text\\";s:13:\\"sisea.partial\\";s:5:\\"value\\";s:7:\\"partial\\";}i:1;a:2:{s:4:\\"text\\";s:11:\\"sisea.match\\";s:5:\\"value\\";s:5:\\"match\\";}}s:5:\\"value\\";s:7:\\"partial\\";s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"perPage\\";a:7:{s:4:\\"name\\";s:7:\\"perPage\\";s:4:\\"desc\\";s:18:\\"sisea.perpage_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:10;s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"showExtract\\";a:7:{s:4:\\"name\\";s:11:\\"showExtract\\";s:4:\\"desc\\";s:22:\\"sisea.showextract_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"extractLength\\";a:7:{s:4:\\"name\\";s:13:\\"extractLength\\";s:4:\\"desc\\";s:24:\\"sisea.extractlength_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:200;s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"extractEllipsis\\";a:7:{s:4:\\"name\\";s:15:\\"extractEllipsis\\";s:4:\\"desc\\";s:26:\\"sisea.extractellipsis_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"...\\";s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"includeTVs\\";a:7:{s:4:\\"name\\";s:10:\\"includeTVs\\";s:4:\\"desc\\";s:21:\\"sisea.includetvs_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"processTVs\\";a:7:{s:4:\\"name\\";s:10:\\"processTVs\\";s:4:\\"desc\\";s:21:\\"sisea.processtvs_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:16:\\"highlightResults\\";a:7:{s:4:\\"name\\";s:16:\\"highlightResults\\";s:4:\\"desc\\";s:27:\\"sisea.highlightresults_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:14:\\"highlightClass\\";a:7:{s:4:\\"name\\";s:14:\\"highlightClass\\";s:4:\\"desc\\";s:25:\\"sisea.highlightclass_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:15:\\"sisea-highlight\\";s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"highlightTag\\";a:7:{s:4:\\"name\\";s:12:\\"highlightTag\\";s:4:\\"desc\\";s:23:\\"sisea.highlighttag_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:4:\\"span\\";s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"pageLimit\\";a:7:{s:4:\\"name\\";s:9:\\"pageLimit\\";s:4:\\"desc\\";s:20:\\"sisea.pagelimit_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\"0\\";s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"pageTpl\\";a:7:{s:4:\\"name\\";s:7:\\"pageTpl\\";s:4:\\"desc\\";s:18:\\"sisea.pagetpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:8:\\"PageLink\\";s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"pageFirstTpl\\";a:7:{s:4:\\"name\\";s:12:\\"pageFirstTpl\\";s:4:\\"desc\\";s:23:\\"sisea.pagefirsttpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"pageLastTpl\\";a:7:{s:4:\\"name\\";s:11:\\"pageLastTpl\\";s:4:\\"desc\\";s:22:\\"sisea.pagelasttpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"pagePrevTpl\\";a:7:{s:4:\\"name\\";s:11:\\"pagePrevTpl\\";s:4:\\"desc\\";s:22:\\"sisea.pageprevtpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"pageNextTpl\\";a:7:{s:4:\\"name\\";s:11:\\"pageNextTpl\\";s:4:\\"desc\\";s:22:\\"sisea.pagenexttpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:14:\\"currentPageTpl\\";a:7:{s:4:\\"name\\";s:14:\\"currentPageTpl\\";s:4:\\"desc\\";s:25:\\"sisea.currentpagetpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:15:\\"CurrentPageLink\\";s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"pagingSeparator\\";a:7:{s:4:\\"name\\";s:15:\\"pagingSeparator\\";s:4:\\"desc\\";s:26:\\"sisea.pagingseparator_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\" | \\";s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:3:\\"ids\\";a:7:{s:4:\\"name\\";s:3:\\"ids\\";s:4:\\"desc\\";s:14:\\"sisea.ids_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"idType\\";a:7:{s:4:\\"name\\";s:6:\\"idType\\";s:4:\\"desc\\";s:17:\\"sisea.idtype_desc\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:2:{i:0;a:2:{s:4:\\"text\\";s:13:\\"sisea.parents\\";s:5:\\"value\\";s:7:\\"parents\\";}i:1;a:2:{s:4:\\"text\\";s:15:\\"sisea.documents\\";s:5:\\"value\\";s:9:\\"documents\\";}}s:5:\\"value\\";s:7:\\"parents\\";s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"exclude\\";a:7:{s:4:\\"name\\";s:7:\\"exclude\\";s:4:\\"desc\\";s:18:\\"sisea.exclude_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"depth\\";a:7:{s:4:\\"name\\";s:5:\\"depth\\";s:4:\\"desc\\";s:16:\\"sisea.depth_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:10;s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"hideMenu\\";a:7:{s:4:\\"name\\";s:8:\\"hideMenu\\";s:4:\\"desc\\";s:19:\\"sisea.hidemenu_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:3:{i:0;a:2:{s:4:\\"text\\";s:22:\\"sisea.hidemenu_visible\\";s:5:\\"value\\";i:0;}i:1;a:2:{s:4:\\"text\\";s:21:\\"sisea.hidemenu_hidden\\";s:5:\\"value\\";i:1;}i:2;a:2:{s:4:\\"text\\";s:19:\\"sisea.hidemenu_both\\";s:5:\\"value\\";i:2;}}s:5:\\"value\\";i:2;s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"contexts\\";a:7:{s:4:\\"name\\";s:8:\\"contexts\\";s:4:\\"desc\\";s:19:\\"sisea.contexts_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"searchIndex\\";a:7:{s:4:\\"name\\";s:11:\\"searchIndex\\";s:4:\\"desc\\";s:22:\\"sisea.searchindex_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:6:\\"search\\";s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"offsetIndex\\";a:7:{s:4:\\"name\\";s:11:\\"offsetIndex\\";s:4:\\"desc\\";s:22:\\"sisea.offsetindex_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:12:\\"sisea_offset\\";s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:17:\\"placeholderPrefix\\";a:7:{s:4:\\"name\\";s:17:\\"placeholderPrefix\\";s:4:\\"desc\\";s:28:\\"sisea.placeholderprefix_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:6:\\"sisea.\\";s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"toPlaceholder\\";a:7:{s:4:\\"name\\";s:13:\\"toPlaceholder\\";s:4:\\"desc\\";s:24:\\"sisea.toplaceholder_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"andTerms\\";a:7:{s:4:\\"name\\";s:8:\\"andTerms\\";s:4:\\"desc\\";s:19:\\"sisea.andterms_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"matchWildcard\\";a:7:{s:4:\\"name\\";s:13:\\"matchWildcard\\";s:4:\\"desc\\";s:24:\\"sisea.matchwildcard_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"docFields\\";a:7:{s:4:\\"name\\";s:9:\\"docFields\\";s:4:\\"desc\\";s:20:\\"sisea.docfields_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:55:\\"pagetitle,longtitle,alias,description,introtext,content\\";s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"fieldPotency\\";a:7:{s:4:\\"name\\";s:12:\\"fieldPotency\\";s:4:\\"desc\\";s:23:\\"sisea.fieldpotency_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"urlScheme\\";a:7:{s:4:\\"name\\";s:9:\\"urlScheme\\";s:4:\\"desc\\";s:20:\\"sisea.urlscheme_desc\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:3:{i:0;a:2:{s:4:\\"text\\";s:18:\\"sisea.url_relative\\";s:5:\\"value\\";i:-1;}i:1;a:2:{s:4:\\"text\\";s:18:\\"sisea.url_absolute\\";s:5:\\"value\\";s:3:\\"abs\\";}i:2;a:2:{s:4:\\"text\\";s:14:\\"sisea.url_full\\";s:5:\\"value\\";s:4:\\"full\\";}}s:5:\\"value\\";i:-1;s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"postHooks\\";a:7:{s:4:\\"name\\";s:9:\\"postHooks\\";s:4:\\"desc\\";s:20:\\"sisea.posthooks_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"activeFacet\\";a:7:{s:4:\\"name\\";s:11:\\"activeFacet\\";s:4:\\"desc\\";s:22:\\"sisea.activefacet_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:7:\\"default\\";s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"facetLimit\\";a:7:{s:4:\\"name\\";s:10:\\"facetLimit\\";s:4:\\"desc\\";s:21:\\"sisea.facetlimit_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:5;s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"sortBy\\";a:7:{s:4:\\"name\\";s:6:\\"sortBy\\";s:4:\\"desc\\";s:17:\\"sisea.sortby_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"sortDir\\";a:7:{s:4:\\"name\\";s:7:\\"sortDir\\";s:4:\\"desc\\";s:18:\\"sisea.sortdir_desc\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:2:{i:0;a:2:{s:4:\\"text\\";s:15:\\"sisea.ascending\\";s:5:\\"value\\";s:3:\\"ASC\\";}i:1;a:2:{s:4:\\"text\\";s:16:\\"sisea.descending\\";s:5:\\"value\\";s:4:\\"DESC\\";}}s:5:\\"value\\";s:4:\\"DESC\\";s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * SimpleSearch\\n *\\n * Copyright 2010-11 by Shaun McCormick <shaun+sisea@modx.com>\\n *\\n * This file is part of SimpleSearch, a simple search component for MODx\\n * Revolution. It is loosely based off of AjaxSearch for MODx Evolution by\\n * coroico\\/kylej, minus the ajax.\\n *\\n * SimpleSearch is free software; you can redistribute it and\\/or modify it under\\n * the terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * SimpleSearch is distributed in the hope that it will be useful, but WITHOUT\\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\\n * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more\\n * details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * SimpleSearch; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package simplesearch\\n *\\/\\n\\/**\\n * SimpleSearch snippet\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n * @package simplesearch\\n *\\/\\nrequire_once $modx->getOption(\'sisea.core_path\',null,$modx->getOption(\'core_path\').\'components\\/simplesearch\\/\').\'model\\/simplesearch\\/simplesearch.class.php\';\\n$search = new SimpleSearch($modx,$scriptProperties);\\n\\n\\/* find search index and toplaceholder setting *\\/\\n$searchIndex = $modx->getOption(\'searchIndex\',$scriptProperties,\'search\');\\n$toPlaceholder = $modx->getOption(\'toPlaceholder\',$scriptProperties,false);\\n$noResultsTpl = $modx->getOption(\'noResultsTpl\',$scriptProperties,\'SearchNoResults\');\\n\\n\\/* get search string *\\/\\nif (empty($_REQUEST[$searchIndex])) {\\n    $output = $search->getChunk($noResultsTpl,array(\\n        \'query\' => \'\',\\n    ));\\n    return $search->output($output,$toPlaceholder);\\n}\\n$searchString = $search->parseSearchString($_REQUEST[$searchIndex]);\\nif (!$searchString) {\\n    $output = $search->getChunk($noResultsTpl,array(\\n        \'query\' => $searchString,\\n    ));\\n    return $search->output($output,$toPlaceholder);\\n}\\n\\n\\/* setup default properties *\\/\\n$tpl = $modx->getOption(\'tpl\',$scriptProperties,\'SearchResult\');\\n$containerTpl = $modx->getOption(\'containerTpl\',$scriptProperties,\'SearchResults\');\\n$showExtract = $modx->getOption(\'showExtract\',$scriptProperties,true);\\n$extractLength = $modx->getOption(\'extractLength\',$scriptProperties,200);\\n$extractEllipsis = $modx->getOption(\'extractEllipsis\',$scriptProperties,\'...\');\\n$highlightResults = $modx->getOption(\'highlightResults\',$scriptProperties,true);\\n$highlightClass = $modx->getOption(\'highlightClass\',$scriptProperties,\'sisea-highlight\');\\n$highlightTag = $modx->getOption(\'highlightTag\',$scriptProperties,\'span\');\\n$perPage = $modx->getOption(\'perPage\',$scriptProperties,10);\\n$pagingSeparator = $modx->getOption(\'pagingSeparator\',$scriptProperties,\' | \');\\n$placeholderPrefix = $modx->getOption(\'placeholderPrefix\',$scriptProperties,\'sisea.\');\\n$includeTVs = $modx->getOption(\'includeTVs\',$scriptProperties,\'\');\\n$processTVs = $modx->getOption(\'processTVs\',$scriptProperties,\'\');\\n$offsetIndex = $modx->getOption(\'offsetIndex\',$scriptProperties,\'sisea_offset\');\\n$idx = isset($_REQUEST[$offsetIndex]) ? intval($_REQUEST[$offsetIndex]) + 1 : 1;\\n$postHooks = $modx->getOption(\'postHooks\',$scriptProperties,\'\');\\n$activeFacet = $modx->getOption(\'facet\',$_REQUEST,$modx->getOption(\'activeFacet\',$scriptProperties,\'default\'));\\n$activeFacet = $modx->sanitizeString($activeFacet);\\n$facetLimit = $modx->getOption(\'facetLimit\',$scriptProperties,5);\\n\\n\\/* get results *\\/\\n$response = $search->getSearchResults($searchString,$scriptProperties);\\n$placeholders = array(\'query\' => $searchString);\\n$resultsTpl = array(\'default\' => array(\'results\' => array(),\'total\' => $response[\'total\']));\\nif (!empty($response[\'results\'])) {\\n    \\/* iterate through search results *\\/\\n    foreach ($response[\'results\'] as $resourceArray) {\\n        $resourceArray[\'idx\'] = $idx;\\n        if (empty($resourceArray[\'link\'])) {\\n            $ctx = !empty($resourceArray[\'context_key\']) ? $resourceArray[\'context_key\'] : $modx->context->get(\'key\');\\n            $resourceArray[\'link\'] = $modx->makeUrl($resourceArray[\'id\'],$ctx);\\n        }\\n        if ($showExtract) {\\n            $extract = array_pop($search->searchArray);\\n            $extract = $search->createExtract($resourceArray[\'content\'],$extractLength,$extract,$extractEllipsis);\\n            \\/* cleanup extract *\\/\\n            $extract = strip_tags(preg_replace(\\"#\\\\<!--(.*?)--\\\\>#si\\",\'\',$extract));\\n            $extract = preg_replace(\\"#\\\\[\\\\[(.*?)\\\\]\\\\]#si\\",\'\',$extract);\\n            $extract = str_replace(array(\'[[\',\']]\'),\'\',$extract);\\n            $resourceArray[\'extract\'] = !empty($highlightResults) ? $search->addHighlighting($extract,$highlightClass,$highlightTag) : $extract;\\n        }\\n        $resultsTpl[\'default\'][\'results\'][] = $search->getChunk($tpl,$resourceArray);\\n        $idx++;\\n    }\\n}\\n\\n\\/* load postHooks to get faceted results *\\/\\nif (!empty($postHooks)) {\\n    $limit = !empty($facetLimit) ? $facetLimit : $perPage;\\n    $search->loadHooks(\'post\');\\n    $search->postHooks->loadMultiple($postHooks,$response[\'results\'],array(\\n        \'hooks\' => $postHooks,\\n        \'search\' => $searchString,\\n        \'offset\' => !empty($_GET[$offsetIndex]) ? intval($_GET[$offsetIndex]) : 0,\\n        \'limit\' => $limit,\\n        \'perPage\' => $limit,\\n    ));\\n    if (!empty($search->postHooks->facets)) {\\n        foreach ($search->postHooks->facets as $facetKey => $facetResults) {\\n            if (empty($resultsTpl[$facetKey])) {\\n                $resultsTpl[$facetKey] = array();\\n                $resultsTpl[$facetKey][\'total\'] = $facetResults[\'total\'];\\n                $resultsTpl[$facetKey][\'results\'] = array();\\n            } else {\\n                $resultsTpl[$facetKey][\'total\'] = $resultsTpl[$facetKey][\'total\'] = $facetResults[\'total\'];\\n            }\\n\\n            $idx = !empty($resultsTpl[$facetKey]) ? count($resultsTpl[$facetKey][\'results\'])+1 : 1;\\n            foreach ($facetResults[\'results\'] as $r) {\\n                $r[\'idx\'] = $idx;\\n                $fTpl = !empty($scriptProperties[\'tpl\'.$facetKey]) ? $scriptProperties[\'tpl\'.$facetKey] : $tpl;\\n                $resultsTpl[$facetKey][\'results\'][] = $search->getChunk($fTpl,$r);\\n                $idx++;\\n            }\\n        }\\n    }\\n}\\n\\n\\/* set faceted results to placeholders for easy result positioning *\\/\\n$output = array();\\nforeach ($resultsTpl as $facetKey => $facetResults) {\\n    $resultSet = implode(\\"\\\\n\\",$facetResults[\'results\']);\\n    $placeholders[$facetKey.\'.results\'] = $resultSet;\\n    $placeholders[$facetKey.\'.total\'] = !empty($facetResults[\'total\']) ? $facetResults[\'total\'] : 0;\\n    $placeholders[$facetKey.\'.key\'] = $facetKey;\\n}\\n$placeholders[\'results\'] = $placeholders[$activeFacet.\'.results\']; \\/* set active facet results *\\/\\n$placeholders[\'total\'] = !empty($resultsTpl[$activeFacet][\'total\']) ? $resultsTpl[$activeFacet][\'total\'] : 0;\\n$placeholders[\'page\'] = isset($_REQUEST[$offsetIndex]) ? ceil(intval($_REQUEST[$offsetIndex]) \\/ $perPage) + 1 : 1;\\n$placeholders[\'pageCount\'] = !empty($resultsTpl[$activeFacet][\'total\']) ? ceil($resultsTpl[$activeFacet][\'total\'] \\/ $perPage) : 1;\\n\\nif (!empty($response[\'results\'])) {\\n    \\/* add results found message *\\/\\n    $placeholders[\'resultInfo\'] = $modx->lexicon(\'sisea.results_found\',array(\\n        \'count\' => $placeholders[\'total\'],\\n        \'text\' => !empty($highlightResults) ? $search->addHighlighting($searchString,$highlightClass,$highlightTag) : $searchString,\\n    ));\\n    \\/* if perPage set to >0, add paging *\\/\\n    if ($perPage > 0) {\\n        $placeholders[\'paging\'] = $search->getPagination($searchString,$perPage,$pagingSeparator,$placeholders[\'total\']);\\n    }\\n}\\n$placeholders[\'query\'] = $searchString;\\n$placeholders[\'facet\'] = $activeFacet;\\n\\n\\/* output *\\/\\n$modx->setPlaceholder($placeholderPrefix.\'query\',$searchString);\\n$modx->setPlaceholder($placeholderPrefix.\'count\',$response[\'total\']);\\n$modx->setPlaceholders($placeholders,$placeholderPrefix);\\nif (empty($response[\'results\'])) {\\n    $output = $search->getChunk($noResultsTpl,array(\\n        \'query\' => $searchString,\\n    ));\\n} else {\\n    $output = $search->getChunk($containerTpl,$placeholders);\\n}\\nreturn $search->output($output,$toPlaceholder);"}',
        'guid' => '9f71d79f7bdf4355d29c8175fda10850',
        'native_key' => 1,
        'signature' => 'ffb9b2d99fe09451933d9025018076f5',
      ),
      'bdebbe7c3cabfb8ff0e7b8008d712c32' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":2,"source":0,"property_preprocess":0,"name":"SimpleSearchForm","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * SimpleSearch\\n *\\n * Copyright 2010-11 by Shaun McCormick <shaun+sisea@modx.com>\\n *\\n * This file is part of SimpleSearch, a simple search component for MODx\\n * Revolution. It is loosely based off of AjaxSearch for MODx Evolution by\\n * coroico\\/kylej, minus the ajax.\\n *\\n * SimpleSearch is free software; you can redistribute it and\\/or modify it under\\n * the terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * SimpleSearch is distributed in the hope that it will be useful, but WITHOUT\\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\\n * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more\\n * details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * SimpleSearch; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package simplesearch\\n *\\/\\n\\/**\\n * Show the search form\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n * @package simplesearch\\n *\\/\\nrequire_once $modx->getOption(\'sisea.core_path\',null,$modx->getOption(\'core_path\').\'components\\/simplesearch\\/\').\'model\\/simplesearch\\/simplesearch.class.php\';\\n$search = new SimpleSearch($modx,$scriptProperties);\\n\\n\\/* setup default options *\\/\\n$scriptProperties = array_merge(array(\\n  \'tpl\' => \'SearchForm\',\\n  \'method\' => \'get\',\\n  \'searchIndex\' => \'search\',\\n  \'toPlaceholder\' => false,\\n  \'landing\' => $modx->resource->get(\'id\'),\\n), $scriptProperties);\\n\\nif (empty($scriptProperties[\'landing\'])) {\\n  $scriptProperties[\'landing\'] = $modx->resource->get(\'id\');\\n}\\n\\n\\/* if get value already exists, set it as default *\\/\\n$searchValue = isset($_REQUEST[$scriptProperties[\'searchIndex\']]) ? $_REQUEST[$scriptProperties[\'searchIndex\']] : \'\';\\n$searchValues = explode(\' \', $searchValue);\\narray_map(array($modx, \'sanitizeString\'), $searchValues);\\n$searchValue = implode(\' \', $searchValues);\\n$placeholders = array(\\n    \'method\' => $scriptProperties[\'method\'],\\n    \'landing\' => $scriptProperties[\'landing\'],\\n    \'searchValue\' => strip_tags(str_replace(array(\'[\',\']\',\'\\"\',\\"\'\\"),array(\'&#91;\',\'&#93;\',\'&quot;\',\'&apos;\'),$searchValue)),\\n    \'searchIndex\' => $scriptProperties[\'searchIndex\'],\\n);\\n\\n$output = $search->getChunk($scriptProperties[\'tpl\'],$placeholders);\\nreturn $search->output($output,$scriptProperties[\'toPlaceholder\']);","locked":0,"properties":"a:5:{s:3:\\"tpl\\";a:7:{s:4:\\"name\\";s:3:\\"tpl\\";s:4:\\"desc\\";s:19:\\"sisea.tpl_form_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:10:\\"SearchForm\\";s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"landing\\";a:7:{s:4:\\"name\\";s:7:\\"landing\\";s:4:\\"desc\\";s:18:\\"sisea.landing_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"searchIndex\\";a:7:{s:4:\\"name\\";s:11:\\"searchIndex\\";s:4:\\"desc\\";s:22:\\"sisea.searchindex_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:6:\\"search\\";s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"method\\";a:7:{s:4:\\"name\\";s:6:\\"method\\";s:4:\\"desc\\";s:17:\\"sisea.method_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:2:{i:0;a:2:{s:4:\\"text\\";s:9:\\"sisea.get\\";s:5:\\"value\\";s:3:\\"get\\";}i:1;a:2:{s:4:\\"text\\";s:10:\\"sisea.post\\";s:5:\\"value\\";s:4:\\"post\\";}}s:5:\\"value\\";s:3:\\"get\\";s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"toPlaceholder\\";a:7:{s:4:\\"name\\";s:13:\\"toPlaceholder\\";s:4:\\"desc\\";s:24:\\"sisea.toplaceholder_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * SimpleSearch\\n *\\n * Copyright 2010-11 by Shaun McCormick <shaun+sisea@modx.com>\\n *\\n * This file is part of SimpleSearch, a simple search component for MODx\\n * Revolution. It is loosely based off of AjaxSearch for MODx Evolution by\\n * coroico\\/kylej, minus the ajax.\\n *\\n * SimpleSearch is free software; you can redistribute it and\\/or modify it under\\n * the terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * SimpleSearch is distributed in the hope that it will be useful, but WITHOUT\\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\\n * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more\\n * details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * SimpleSearch; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package simplesearch\\n *\\/\\n\\/**\\n * Show the search form\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n * @package simplesearch\\n *\\/\\nrequire_once $modx->getOption(\'sisea.core_path\',null,$modx->getOption(\'core_path\').\'components\\/simplesearch\\/\').\'model\\/simplesearch\\/simplesearch.class.php\';\\n$search = new SimpleSearch($modx,$scriptProperties);\\n\\n\\/* setup default options *\\/\\n$scriptProperties = array_merge(array(\\n  \'tpl\' => \'SearchForm\',\\n  \'method\' => \'get\',\\n  \'searchIndex\' => \'search\',\\n  \'toPlaceholder\' => false,\\n  \'landing\' => $modx->resource->get(\'id\'),\\n), $scriptProperties);\\n\\nif (empty($scriptProperties[\'landing\'])) {\\n  $scriptProperties[\'landing\'] = $modx->resource->get(\'id\');\\n}\\n\\n\\/* if get value already exists, set it as default *\\/\\n$searchValue = isset($_REQUEST[$scriptProperties[\'searchIndex\']]) ? $_REQUEST[$scriptProperties[\'searchIndex\']] : \'\';\\n$searchValues = explode(\' \', $searchValue);\\narray_map(array($modx, \'sanitizeString\'), $searchValues);\\n$searchValue = implode(\' \', $searchValues);\\n$placeholders = array(\\n    \'method\' => $scriptProperties[\'method\'],\\n    \'landing\' => $scriptProperties[\'landing\'],\\n    \'searchValue\' => strip_tags(str_replace(array(\'[\',\']\',\'\\"\',\\"\'\\"),array(\'&#91;\',\'&#93;\',\'&quot;\',\'&apos;\'),$searchValue)),\\n    \'searchIndex\' => $scriptProperties[\'searchIndex\'],\\n);\\n\\n$output = $search->getChunk($scriptProperties[\'tpl\'],$placeholders);\\nreturn $search->output($output,$scriptProperties[\'toPlaceholder\']);"}',
        'guid' => 'e6584fd1f288a7c430dd82e8c2930666',
        'native_key' => 2,
        'signature' => '156bd9f4a7b982748bc0040ced143ed0',
      ),
      '35dee69e42703cea416bb9ab35ddbd01' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":3,"source":0,"property_preprocess":0,"name":"SimpleSearchIndexAll","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * SimpleSearch\\n *\\n * Copyright 2010-11 by Shaun McCormick <shaun+sisea@modx.com>\\n *\\n * This file is part of SimpleSearch, a simple search component for MODx\\n * Revolution. It is loosely based off of AjaxSearch for MODx Evolution by\\n * coroico\\/kylej, minus the ajax.\\n *\\n * SimpleSearch is free software; you can redistribute it and\\/or modify it under\\n * the terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * SimpleSearch is distributed in the hope that it will be useful, but WITHOUT\\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\\n * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more\\n * details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * SimpleSearch; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package simplesearch\\n *\\/\\n\\/**\\n * SimpleSearchIndexAll snippet, used for indexing all resources with alternate search drivers\\n *\\n * @package simplesearch\\n *\\/\\nrequire_once $modx->getOption(\'sisea.core_path\',null,$modx->getOption(\'core_path\').\'components\\/simplesearch\\/\').\'model\\/simplesearch\\/simplesearch.class.php\';\\n$search = new SimpleSearch($modx,$scriptProperties);\\n$search->loadDriver($scriptProperties);\\n\\n$memoryLimit = $modx->getOption(\'memory_limit\',$scriptProperties,\'512M\');\\n@ini_set(\'memory_limit\',$memoryLimit);\\n@set_time_limit(0);\\n\\n$includeTVs = $modx->getOption(\'includeTVs\',$scriptProperties,true);\\n$processTVs = $modx->getOption(\'processTVs\',$scriptProperties,true);\\n\\n\\/* build query *\\/\\n$c = $modx->newQuery(\'modResource\');\\n$c->where(array(\\n    \'searchable\' => true,\\n    \'deleted\' => false,\\n    \'published\' => true,\\n));\\n$c->sortby(\'id\',\'ASC\');\\n$resources = $modx->getIterator(\'modResource\',$c);\\n\\n$i = 0;\\nforeach ($resources as $resource) {\\n    $resourceArray = $resource->toArray();\\n    $templateVars =& $resource->getMany(\'TemplateVars\');\\n    if (!empty($templateVars) && $includeTVs) {\\n        foreach ($templateVars as $tvId => $templateVar) {\\n            $resourceArray[$templateVar->get(\'name\')] = !empty($processTVs) ? $templateVar->renderOutput($resource->get(\'id\')) : $templateVar->get(\'value\');\\n        }\\n    }\\n\\n    if ($search->driver->index($resourceArray,false)) {\\n        $modx->log(modX::LOG_LEVEL_INFO,\'[SimpleSearch] Indexing Resource: \'.$resourceArray[\'pagetitle\']);\\n        $i++;\\n    }\\n}\\n\\nreturn $modx->lexicon(\'sisea.index_finished\',array(\'total\' => $i));","locked":0,"properties":null,"moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * SimpleSearch\\n *\\n * Copyright 2010-11 by Shaun McCormick <shaun+sisea@modx.com>\\n *\\n * This file is part of SimpleSearch, a simple search component for MODx\\n * Revolution. It is loosely based off of AjaxSearch for MODx Evolution by\\n * coroico\\/kylej, minus the ajax.\\n *\\n * SimpleSearch is free software; you can redistribute it and\\/or modify it under\\n * the terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * SimpleSearch is distributed in the hope that it will be useful, but WITHOUT\\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\\n * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more\\n * details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * SimpleSearch; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package simplesearch\\n *\\/\\n\\/**\\n * SimpleSearchIndexAll snippet, used for indexing all resources with alternate search drivers\\n *\\n * @package simplesearch\\n *\\/\\nrequire_once $modx->getOption(\'sisea.core_path\',null,$modx->getOption(\'core_path\').\'components\\/simplesearch\\/\').\'model\\/simplesearch\\/simplesearch.class.php\';\\n$search = new SimpleSearch($modx,$scriptProperties);\\n$search->loadDriver($scriptProperties);\\n\\n$memoryLimit = $modx->getOption(\'memory_limit\',$scriptProperties,\'512M\');\\n@ini_set(\'memory_limit\',$memoryLimit);\\n@set_time_limit(0);\\n\\n$includeTVs = $modx->getOption(\'includeTVs\',$scriptProperties,true);\\n$processTVs = $modx->getOption(\'processTVs\',$scriptProperties,true);\\n\\n\\/* build query *\\/\\n$c = $modx->newQuery(\'modResource\');\\n$c->where(array(\\n    \'searchable\' => true,\\n    \'deleted\' => false,\\n    \'published\' => true,\\n));\\n$c->sortby(\'id\',\'ASC\');\\n$resources = $modx->getIterator(\'modResource\',$c);\\n\\n$i = 0;\\nforeach ($resources as $resource) {\\n    $resourceArray = $resource->toArray();\\n    $templateVars =& $resource->getMany(\'TemplateVars\');\\n    if (!empty($templateVars) && $includeTVs) {\\n        foreach ($templateVars as $tvId => $templateVar) {\\n            $resourceArray[$templateVar->get(\'name\')] = !empty($processTVs) ? $templateVar->renderOutput($resource->get(\'id\')) : $templateVar->get(\'value\');\\n        }\\n    }\\n\\n    if ($search->driver->index($resourceArray,false)) {\\n        $modx->log(modX::LOG_LEVEL_INFO,\'[SimpleSearch] Indexing Resource: \'.$resourceArray[\'pagetitle\']);\\n        $i++;\\n    }\\n}\\n\\nreturn $modx->lexicon(\'sisea.index_finished\',array(\'total\' => $i));"}',
        'guid' => '53a34a99a54f3d19fa0c9a8f4b71f55a',
        'native_key' => 3,
        'signature' => '27f6fbfd195f37d674c9a4a17ea06e36',
      ),
    ),
  ),
  'related_object_attributes' => 
  array (
    'Snippets' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
  ),
  'namespace' => 'sisea',
  'resolve' => 
  array (
    0 => 
    array (
      'type' => 'file',
      'body' => '{"source":"simplesearch-1.6.0-pl\\/modCategory\\/bc4ce694fb0f40c8e7f4194d1d14745e\\/0\\/","target":"return MODX_CORE_PATH . \'components\\/\';","name":"simplesearch"}',
    ),
  ),
  'validate' => NULL,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => '1c0f97af7134db301277dece33ef453b',
  'package' => 'modx',
  'class' => 'modCategory',
  'signature' => 'bc4ce694fb0f40c8e7f4194d1d14745e',
  'native_key' => 1,
  'object' => '{"id":1,"parent":0,"category":"SimpleSearch"}',
);